{"version":3,"sources":["redux/recipeActionTypes.js","redux/reducers/recipe.js","redux/reducers/index.js","redux/store.js","config.js","redux/actions/recipe.js","redux/selectors.js","components/RecipeList.js","components/RecipeForm.js","components/RecipeDetails.js","components/nav.js","containers/MainContainer.js","containers/RecipeDetailsContainer.js","App.js","serviceWorker.js","index.js"],"names":["ADD_RECIPE","UPDATE_RECIPE","GET_RECIPES","RECEIVE_RECIPES","SELECT_RECIPE","CLEAR_RECIPE","initialState","isGetting","isBroken","allIds","byId","selectedId","combineReducers","recipes","state","arguments","length","undefined","action","type","Object","assign","data","payload","dataIds","map","recipe","id","recipesById","forEach","objectSpread","recipeIds","toConsumableArray","push","form","formReducer","persistedState","serializedState","sessionStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReduxThunk","subscribe","throttle","stringify","setItem","_unused","saveState","getState","API_URL","process","receiveRecipes","response","getStateRecipes","getRecipeById","getRecipesList","getRecipeIds","RecipeCard","props","match","react_default","a","createElement","Link","to","concat","url","key","className","name","RecipeList","renderQuill","_ref","input","lib_default","onChange","newValue","delta","source","onBlur","range","quill","getHTML","RenderField","field","Fragment","placeholder","meta","touched","error","IngredientItem","ingredient","index","fields","add","remove","onClick","Field","component","IngredientFieldArray","RecipeFormClass","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","values","_this$props","addRecipe","updateRecipe","Recipe","console","log","axios","post","then","res","setState","postSuccessful","postId","catch","patch","patchSuccessful","_this$props2","handleSubmit","_this$state","Redirect","onSubmit","FieldArray","React","Component","RecipeForm","reduxForm","connect","_ref2","initialValues","RecipeDetails","Ingredients","val","scale","ReactHtmlParser","details","nav","NavLink","MainContainer","getAllRecipes","recipeList","recipeIsGetting","Route","path","render","RecipeDetailsContainer","dispatch","Details","Switch","exact","components_RecipeForm","params","App","displayRecipeList","displayRecipeForm","HashRouter","Boolean","window","location","hostname","ReactDOM","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22124b97.chunk.js","sourcesContent":["export const ADD_RECIPE = 'ADD_RECIPE'\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE'\nexport const DELETE_RECIPE = 'DELETE_RECIPE'\nexport const GET_RECIPES = 'GET_RECIPES'\nexport const RECEIVE_RECIPES = 'RECEIVE_RECIPES'\nexport const GET_RECIPE = 'GET_RECIPE'\nexport const SELECT_RECIPE = 'SELECT_RECIPE'\nexport const CLEAR_RECIPE = 'CLEAR_RECIPE'","import { ADD_RECIPE, UPDATE_RECIPE, DELETE_RECIPE, GET_RECIPE, GET_RECIPES, SELECT_RECIPE, CLEAR_RECIPE, RECEIVE_RECIPES } from '../recipeActionTypes'\n\nconst initialState = {\n    isGetting: false,\n    isBroken: false,\n    allIds: [],\n    byId: {},\n    selectedId: null,\n}\n\nexport default function (state = initialState, action) {\n    switch(action.type) {\n        case GET_RECIPES: {\n            return Object.assign({}, state, {\n                isGetting: true\n            })\n        }\n        case RECEIVE_RECIPES: {\n            const { data } = action.payload\n            if(action.payload !== 'error') {\n                const dataIds = data.map(recipe => recipe.id)\n                const recipesById = {}\n    \n                data.forEach(recipe => {\n                    recipesById[recipe.id] = {...recipe}\n                });\n                return Object.assign({}, state, {\n                    isGetting: false,\n                    allIds: dataIds,\n                    byId: recipesById\n                })\n            } else {\n                return Object.assign({}, state, {\n                    isBroken: true\n                })\n            }\n        }\n        case ADD_RECIPE: {\n            const { data } = action.payload\n            const recipeIds = [...state.allIds]\n            const recipesById = {...state.byId}\n\n            recipeIds.push(data.id)\n            recipesById[data.id] = {...data}\n\n            return {\n                ...state,\n                allIds: recipeIds,\n                byId: recipesById\n            }\n        }\n        case UPDATE_RECIPE: {\n            const { data } = action.payload\n            const recipe = {...state.byId[data.id], ...data}\n            const recipesById = {...state.byId}\n            recipesById[recipe.id] = {...recipe}\n\n            return {\n                ...state,\n                byId: recipesById\n            }\n        }\n        case SELECT_RECIPE: {\n            \n            const  id  = action.id\n            \n            return {\n                ...state,\n                selectedId: id,\n            }\n        }\n\n        case CLEAR_RECIPE: {\n            return {\n                ...state,\n                selectedId: null,\n            }\n        }\n        default:\n            return state;\n    }\n}","import recipes from './recipe'\nimport { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nexport default combineReducers({\n    recipes,\n    form: formReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./reducers\";\nimport { devToolsEnhancer, composeWithDevTools } from 'redux-devtools-extension';\nimport { throttle } from 'lodash';\nimport ReduxThunk from 'redux-thunk';\n\nconst loadState = () => {\n  try {\n    const serializedState = sessionStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; \n\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nconst persistedState = loadState()\n\n\n\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(ReduxThunk)))\n\n\nstore.subscribe(throttle(() => {\n  saveState({\n    recipes: store.getState().recipes\n  });\n}, 1000));\n\nexport default store","const API_URL = process.env.NODE_ENV !== 'production' ? process.env.REACT_APP_DEV_URL : process.env.REACT_APP_PROD_URL;\n\nexport default API_URL","import * as axios from 'axios';\nimport API_URL from '../../config';\nimport { ADD_RECIPE, UPDATE_RECIPE, DELETE_RECIPE, GET_RECIPE, GET_RECIPES, SELECT_RECIPE, CLEAR_RECIPE, RECEIVE_RECIPES } from '../recipeActionTypes'\n\nfunction axiosGetRecipes() {\n    return axios.get(API_URL + '/recipes')\n }\n\n\nexport function getRecipes() {\n    return {\n        type: GET_RECIPES\n    }\n}\n\nexport function getAllRecipes(){\n    return function(dispatch){\n        dispatch(getRecipes())\n        return axiosGetRecipes().then(res => dispatch(receiveRecipes(res)), err => dispatch(receiveRecipes('error')))\n    }\n}\n\nfunction receiveRecipes(response){\n    return {\n        type: RECEIVE_RECIPES,\n        payload:response\n    }\n}\n\nexport function addRecipe(response) {\n    return {\n        type: ADD_RECIPE,\n        payload: response\n    }\n}\n\nexport function updateRecipe(response) {\n    return {\n        type: UPDATE_RECIPE,\n        payload: response\n    }\n}\n\nexport function selectRecipe(id) {\n    return {\n        type: SELECT_RECIPE,\n        id\n    }\n}\n\nexport function clearRecipe() {\n    return {\n        type: CLEAR_RECIPE\n    }\n}\n","export const getStateRecipes = store => store.recipes\n\nexport const getRecipeIds = store => ( getStateRecipes(store) ? getStateRecipes(store).allIds : [] )\n\nexport const getRecipeById = (store, id) => ( getStateRecipes(store) ? getStateRecipes(store).byId[id] : {} )\n\nexport const getRecipesList = (store) => getRecipeIds(store).map(id => getRecipeById(store, id))","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction RecipeCard(props) {\n    const { recipe, match } = props\n    return (\n        <Link to={`${match.url}/${recipe.id}`} key={recipe.id} className='recipe-card' > \n                <h1>{recipe.name}</h1>\n        </Link>\n    )\n}\n\nexport default function RecipeList(props){\n        return (\n            <div className='recipe-collection'>\n                {props.recipes.map(recipe => <RecipeCard recipe={recipe} {...props}/>)} \n            </div>\n        )\n    }\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Field, FieldArray, reduxForm } from 'redux-form'\nimport { addRecipe, updateRecipe } from '../redux/actions/recipe'\nimport { getRecipeById } from '../redux/selectors'\nimport axios from 'axios';\nimport API_URL from '../config';\nimport ReactQuill from 'react-quill';\n\nconst renderQuill = ({ input }) => {\n  return (\n    <ReactQuill\n      {...input}\n      onChange={(newValue, delta, source) => {\n        if (source === 'user') {\n          input.onChange(newValue);\n        }\n      }}\n      onBlur={(range, source, quill) => {\n        input.onBlur(quill.getHTML());\n      }}\n    />\n  );  \n}\n\n// Usage:\n{/* <Field name=\"description\" component={renderQuill} />; */}\n\nconst RenderField = (field) => {\n    //creates custom input for Field component\n    return(\n        <>\n            <input {...field.input} className={field.className} type={field.type} placeholder={field.placeholder}/>\n            {field.meta.touched && field.meta.error &&\n            <span className=\"error\">{field.meta.error}</span>}\n        </>\n    )\n}\n\nconst RenderTextArea = (field) => {\n    //creates custom textarea for Field component\n    return(\n        <>\n            <textarea {...field.input} className={field.className}>\n                {field.input.value}\n            </textarea>\n            {field.meta.touched && field.meta.error &&\n            <span className=\"error\">{field.meta.error}</span>}\n        </>\n    )\n}\n\nconst IngredientItem = (ingredient, index, fields) => {\n// IngredientItem is callback function passed to array .map function in IngredientFieldArray\n// determine what button to display\n    let add, remove\n    if (fields.length > 1) remove = (<button type='button' onClick={() => fields.remove(index)}> - </button>); //if Ingredients array is more than 1, and current element is not last, show remove button\n    if (fields.length === 0 || index === fields.length-1) add = (<button type='button' onClick={() => fields.push()}> + </button>); //if Ingredient array is empty, or current element is last, show add button\n\n    return (\n        <li key={index}>\n            <div className='ingredientFields'>\n                <Field className='quant-field' name={`${ingredient}.val`} component={RenderField} type='number' placeholder='0'/>\n                <Field className='scale-field' name={`${ingredient}.scale`} component={RenderField} type='text' placeholder='Measure'/>\n                <Field className='name-field' name={`${ingredient}.name`} component={RenderField} type='text' placeholder='Ingredient'/>\n                {remove}\n                {add}\n            </div>\n        </li>\n    )\n}\n\nconst IngredientFieldArray = props => {\n// IngredientFieldArray uses IngredientItem callback to render the list elements\n// This component is wrapped with the FieldArray component in RecipeFormClass for redux-forms functionality\n\n    const {fields} = props\n    if(fields.length === 0) fields.push();\n\n    return (\n        <ul className='ingredients'>\n            {fields.map(IngredientItem)}\n        </ul>\n        \n\n    )\n}\n\n\nclass RecipeFormClass extends React.Component {\n// RecipeForm is a class component because the submit handler requires props.id to determine which axios method to run.\nconstructor(props){\n    super()\n    this.state = {\n        postSuccessful: false,\n        postId:'',\n        patchSuccessful: false,\n    }\n}\n    \n    submit = (values) => {\n        const {id, addRecipe, updateRecipe} = this.props\n        //data object is there because backend expects data.Recipe. I could change it into just an unamed pojo, seems like a lot of effort to reduce a line from the code tho.\n        const data = { Recipe: {...values}}\n        console.log(id)\n        if(id === 'new' ){\n            return axios.post(API_URL + '/recipes', data)\n            .then(res => {\n                addRecipe(res)\n                this.setState({postSuccessful: true, postId: res.data.id})\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n        } else {\n            return axios.patch(API_URL + '/recipes/' + id, data)\n            .then(res => {\n                updateRecipe(res)\n                this.setState({patchSuccessful:true })\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n        }\n    }\n\n    render(){\n        const { handleSubmit, id } = this.props\n        const { postSuccessful, patchSuccessful, postId } = this.state\n        if(postSuccessful) return <Redirect to={`/recipes/${postId}`} />;\n        if(patchSuccessful) return <Redirect to={`/recipes/${id}`} />;\n        return (\n            <form onSubmit={handleSubmit(this.submit)}>\n                <Field className='title-field' name='name' component={RenderField} type='text' placeholder='Recipe Name' />\n                <h2>Ingredients</h2>\n                <FieldArray name='Ingredients' component={IngredientFieldArray}/>\n                <h2>Instructions</h2>\n                <Field className='detail-text-area' name='details' component={renderQuill} />\n                <div>\n                    <button type=\"submit\">Save</button>\n                </div>\n            </form>\n        )\n    }\n}\n\n// mapStateToProps function is only so that RecipeForm can be reused for editing recipes.\n// the { id } in function sig is because connect passes the state and the component's own props as arguments. In essence the func sig is shorthand for doing const id = component's props.id  \nfunction mapStateToProps(state, { id }){\n    return {initialValues: getRecipeById(state, id)}\n}\n\n//adding reduxForm functionality to RecipeFormClass\nlet RecipeForm = reduxForm({\n    form: 'recipe'\n})(RecipeFormClass)\n\n//adding access to other state objects and export\nexport default connect(mapStateToProps, { addRecipe, updateRecipe })(RecipeForm)\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nexport default function RecipeDetails(props) {\n  const {recipe, id } = props\n  if(recipe && (recipe.id === +id)){\n     return (\n      <>\n        <h1>{recipe.name}</h1>\n        <h2>Ingredients</h2>\n        <ul className='ingredients'>\n            {recipe.Ingredients && recipe.Ingredients.map(ingredient => (\n                <li className='ingredient-entry' key={ingredient.name}>\n                    <span>{ingredient.val} {ingredient.scale} {ingredient.name}</span>\n                </li>\n            ))}\n        </ul>\n        <h2>Instructions</h2>\n        <div>{ReactHtmlParser(recipe.details)}</div>\n      </>\n    )\n  } else {\n    return null\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function (props) {\n  return (\n    <nav id={props.id}>\n      <NavLink to='/recipes'>My Recipes</NavLink>\n      <NavLink to='/recipes/new'>Add Recipe</NavLink>\n    </nav>\n  )\n}","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Route } from 'react-router-dom'\n// import { RouteWithProps } from '../bin'\n\nimport { getAllRecipes } from '../redux/actions/recipe'\nimport { getRecipesList, getStateRecipes } from '../redux/selectors';\nimport { RecipeList, Nav} from '../components';\nimport { RecipeDetailsContainer } from '.';\n\nclass MainContainer extends React.Component {\n  constructor(props){\n    super(props)\n    this.props.getAllRecipes()\n  }\n\n  render(){\n    const { recipeList, recipeIsGetting } = this.props \n    return (\n      <>\n        <div id='main'>\n          <Nav id='navbar'/>\n          <Route path='/recipes' render={props =>{\n            return recipeIsGetting ? <p>Loading...</p> : <RecipeList recipes={recipeList} {...props} />\n          }} />\n        </div>\n\n        <Route path='/recipes/:id' component={RecipeDetailsContainer}/>\n      </>\n    )\n}\n}\n\n//the state mapped to props.recipes is actually formatted through selectors.js\n//getRecipesList returns an array of recipe objects\nfunction mapStateToProps(state){\n  const recipeList = getRecipesList(state)\n  const recipeIsGetting = getStateRecipes(state).isGetting\n  \n  return { recipeList, recipeIsGetting } \n}\n\n//exports the connected component\nexport default connect( mapStateToProps, { getAllRecipes })(MainContainer)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom'\n\nimport { RecipeForm, RecipeDetails } from '../components';\nimport { getRecipeById } from '../redux/selectors'\n\n\n\n// RecipeList is visually going to be a card, or rectangular box, with the recipe name and details, and full info that expands or opens a RecipeEntry component in new view on click\n// expanded view will reveal an edit and delete button\n// edit button toggles the JSX fragment shown \nclass Details extends React.Component{\n    render(){\n        const { recipe, match } = this.props\n        console.log(match, recipe)\n        // fragment rendered is changed depending on the local showInput state\n        return (\n            <div id='detail'>\n                <Switch>\n                    <Route exact path='/recipes/new' render={() => {\n                        return (\n                            <>\n                                <Link to='/recipes' type='button'> Cancel </Link>\n                                <RecipeForm id='new' />\n                            </>\n                        )\n                    }}/>\n                    <Route exact path={`${match.url}`} render={() => {\n                        //RecipeDetails needs the parent match prop since \n                        return ( \n                            <>\n                                {/* Match.url below should be /recipes/:id so the Link to should = recipes/1/edit when done correctly */}\n                                <Link to='/recipes' type='button'> X </Link>\n                                <Link to={`${match.url}/edit`}> Edit </Link>\n                                <RecipeDetails id={match.params.id} recipe={recipe} /> \n                            </>\n                       )\n                    }}/>\n                    <Route path={`${match.url}/edit`} render={()=> {\n                        return (\n                            <>\n                                <Link to={`${match.url}`}> Cancel </Link>\n                                <RecipeForm id={match.params.id} />\n                            </>\n                        )\n                    }}/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, { match }) {\n    const { id } = match.params\n    const recipe = getRecipeById(state, id)\n    return { recipe }\n}\n\nexport default connect(mapStateToProps)(Details)\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { MainContainer } from './containers';\n\nexport default class App extends Component {\n  constructor(props){\n    super()\n    this.state = {\n        displayRecipeList: true,\n        displayRecipeForm: false,\n        \n    }\n}\nrender(){\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <div className='flex-container'>\n                    <Route path='/' component={MainContainer}/>\n                \n                </div>\n            </div>\n        </HashRouter>\n    )\n}\n\n\n\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nimport './style/normalize.css';\nimport './style/index.scss';\n\nimport 'react-quill/dist/quill.snow.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    \n    , \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}